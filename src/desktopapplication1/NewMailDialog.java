/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewMailDialog.java
 *
 * Created on 05.Oca.2012, 22:18:18
 */
package desktopapplication1;

import org.jdesktop.application.Action;

/**
 *
 * @author kursat
 */
public class NewMailDialog extends javax.swing.JDialog {

    /** Creates new form NewMailDialog */
    public NewMailDialog(java.awt.Frame parent) {
        super(parent);
        initComponents();
        
        updateContacts();
        chosenTextField = toTextField;
        
        messageTextArea.setText("Hello,\n\nRegards, " + DesktopApplication1.config.getName() );
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newMail_messageInfoPanel = new javax.swing.JPanel();
        toLabel = new javax.swing.JLabel();
        ccLabel = new javax.swing.JLabel();
        subjectLabel = new javax.swing.JLabel();
        toTextField = new javax.swing.JTextField();
        ccTextField = new javax.swing.JTextField();
        subjectTextField = new javax.swing.JTextField();
        newMail_messagePanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        messageTextArea = new javax.swing.JTextArea();
        sendButton = new javax.swing.JButton();
        contactsPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        contactList = new javax.swing.JList();
        addContactButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(desktopapplication1.DesktopApplication1.class).getContext().getResourceMap(NewMailDialog.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        newMail_messageInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("newMail_messageInfoPanel.border.title"))); // NOI18N
        newMail_messageInfoPanel.setName("newMail_messageInfoPanel"); // NOI18N

        toLabel.setText(resourceMap.getString("toLabel.text")); // NOI18N
        toLabel.setName("toLabel"); // NOI18N

        ccLabel.setText(resourceMap.getString("ccLabel.text")); // NOI18N
        ccLabel.setName("ccLabel"); // NOI18N

        subjectLabel.setText(resourceMap.getString("subjectLabel.text")); // NOI18N
        subjectLabel.setName("subjectLabel"); // NOI18N

        toTextField.setText(resourceMap.getString("toTextField.text")); // NOI18N
        toTextField.setName("toTextField"); // NOI18N
        toTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                setChosenTextFieldTO(evt);
            }
        });

        ccTextField.setText(resourceMap.getString("ccTextField.text")); // NOI18N
        ccTextField.setName("ccTextField"); // NOI18N
        ccTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                setChosenTextFieldCC(evt);
            }
        });

        subjectTextField.setText(resourceMap.getString("subjectTextField.text")); // NOI18N
        subjectTextField.setToolTipText(resourceMap.getString("subjectTextField.toolTipText")); // NOI18N
        subjectTextField.setName("subjectTextField"); // NOI18N

        javax.swing.GroupLayout newMail_messageInfoPanelLayout = new javax.swing.GroupLayout(newMail_messageInfoPanel);
        newMail_messageInfoPanel.setLayout(newMail_messageInfoPanelLayout);
        newMail_messageInfoPanelLayout.setHorizontalGroup(
            newMail_messageInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newMail_messageInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newMail_messageInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(subjectLabel)
                    .addComponent(ccLabel)
                    .addComponent(toLabel))
                .addGap(18, 18, 18)
                .addGroup(newMail_messageInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(toTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                    .addComponent(ccTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                    .addComponent(subjectTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE))
                .addContainerGap())
        );
        newMail_messageInfoPanelLayout.setVerticalGroup(
            newMail_messageInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newMail_messageInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newMail_messageInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toLabel)
                    .addComponent(toTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newMail_messageInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ccLabel)
                    .addComponent(ccTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newMail_messageInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subjectLabel)
                    .addComponent(subjectTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        newMail_messagePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("newMail_messagePanel.border.title"))); // NOI18N
        newMail_messagePanel.setName("newMail_messagePanel"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        messageTextArea.setColumns(20);
        messageTextArea.setFont(resourceMap.getFont("messageTextArea.font")); // NOI18N
        messageTextArea.setRows(5);
        messageTextArea.setName("messageTextArea"); // NOI18N
        jScrollPane2.setViewportView(messageTextArea);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(desktopapplication1.DesktopApplication1.class).getContext().getActionMap(NewMailDialog.class, this);
        sendButton.setAction(actionMap.get("onClickSendMailButton")); // NOI18N
        sendButton.setText(resourceMap.getString("sendButton.text")); // NOI18N
        sendButton.setName("sendButton"); // NOI18N

        javax.swing.GroupLayout newMail_messagePanelLayout = new javax.swing.GroupLayout(newMail_messagePanel);
        newMail_messagePanel.setLayout(newMail_messagePanelLayout);
        newMail_messagePanelLayout.setHorizontalGroup(
            newMail_messagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newMail_messagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newMail_messagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addComponent(sendButton))
                .addContainerGap())
        );
        newMail_messagePanelLayout.setVerticalGroup(
            newMail_messagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newMail_messagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sendButton))
        );

        contactsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("contactsPanel.border.title"))); // NOI18N
        contactsPanel.setName("contactsPanel"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        contactList.setName("contactList"); // NOI18N
        jScrollPane1.setViewportView(contactList);

        addContactButton.setAction(actionMap.get("onClickAddButton")); // NOI18N
        addContactButton.setText(resourceMap.getString("addContactButton.text")); // NOI18N
        addContactButton.setName("addContactButton"); // NOI18N

        javax.swing.GroupLayout contactsPanelLayout = new javax.swing.GroupLayout(contactsPanel);
        contactsPanel.setLayout(contactsPanelLayout);
        contactsPanelLayout.setHorizontalGroup(
            contactsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contactsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contactsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                    .addComponent(addContactButton))
                .addContainerGap())
        );
        contactsPanelLayout.setVerticalGroup(
            contactsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contactsPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addContactButton))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(contactsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newMail_messagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(newMail_messageInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(newMail_messageInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newMail_messagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(contactsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setChosenTextFieldTO(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_setChosenTextFieldTO
        chosenTextField = toTextField;
    }//GEN-LAST:event_setChosenTextFieldTO

    private void setChosenTextFieldCC(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_setChosenTextFieldCC
        chosenTextField = ccTextField;
    }//GEN-LAST:event_setChosenTextFieldCC

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                NewMailDialog dialog = new NewMailDialog(new javax.swing.JFrame());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    @Action
    public void onClickSendMailButton() {
        if ( toTextField.getText() != null ) {
            if (subjectTextField.getText() == null) {
                //TODO: Warning: No Subject!
            }
            if (messageTextArea.getText() == null) {
                //TODO: Warning: No Message Body!
            }
            
            String host = DesktopApplication1.config.getSMTPHost();
            String port = DesktopApplication1.config.getSMTPPort();
            String from = DesktopApplication1.config.getFrom();
            String pass = DesktopApplication1.config.getPass();
            
            String [] to = toTextField.getText().split("; ");
            String [] cc = ccTextField.getText().split("; ");
            
            System.out.println("TOs:");
            for (int i = 0; i < to.length; i++) {
                System.out.println(to[i]);
            }            
            System.out.println("CCs:");
            for (int i = 0; i < cc.length; i++) {
                System.out.println(cc[i]);
            }
            
            SMTPConnection connection = new SMTPConnection(host, Integer.parseInt(port), from, pass);
            connection.sendMail(subjectTextField.getText(), messageTextArea.getText(), to, cc);
            
        } else {
            //TODO: Error: No To List!
        }
        
        dispose();
        
    }

    @Action
    public void onClickAddButton() {
        int [] indices = contactList.getSelectedIndices();
        
        for (int i = 0; i < indices.length; i++) {
            if (chosenTextField.getText().length() > 0) {
                chosenTextField.setText(chosenTextField.getText() + "; " + DesktopApplication1.contacts.getAllContacts()[i].getEmail());
                System.out.println(indices[i]);
            } else {
                chosenTextField.setText("" + DesktopApplication1.contacts.getAllContacts()[i].getEmail());
                System.out.println(indices[i]);
            }
            
        }
    }
    
    public void updateContacts () {
        
        final String [] names = new String[DesktopApplication1.contacts.getAllContacts().length];
        
        for (int i = 0; i < DesktopApplication1.contacts.getAllContacts().length; i++) {
            names[i] = DesktopApplication1.contacts.getAllContacts()[i].getName();
        }
        
        contactList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = names;
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addContactButton;
    private javax.swing.JLabel ccLabel;
    private javax.swing.JTextField ccTextField;
    private javax.swing.JList contactList;
    private javax.swing.JPanel contactsPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea messageTextArea;
    private javax.swing.JPanel newMail_messageInfoPanel;
    private javax.swing.JPanel newMail_messagePanel;
    private javax.swing.JButton sendButton;
    private javax.swing.JLabel subjectLabel;
    private javax.swing.JTextField subjectTextField;
    private javax.swing.JLabel toLabel;
    private javax.swing.JTextField toTextField;
    // End of variables declaration//GEN-END:variables

    private javax.swing.JTextField chosenTextField;
}
